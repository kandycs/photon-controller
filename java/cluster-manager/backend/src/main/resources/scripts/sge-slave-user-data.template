#cloud-config
bootcmd:
  - rm -f /etc/systemd/network/*.network
  - systemctl stop systemd-networkd

write_files:
  - content: |
        PWD=`pwd`
        export SGE_ROOT=/opt/sge
        export PATH=/opt/sge/bin:/opt/sge/bin/lx-amd64/:$PATH
        cd /opt/sge
        /opt/sge/inst_sge -x -auto /opt/sge/inst_template.conf
    owner: root:root
    permissions: 0644
    path: /tmp/install_execd.sh
  - content: |
        eno_name=$(ip addr | grep eth | sed 's/.*\(eth.*\):.*/\1/' | head -n 1)
        cat > "/etc/systemd/network/10-dhcp-${eno_name}.network" << EOF
        [Match]
        Name=${eno_name}

        [Network]
        DHCP=yes
        EOF
        ip addr flush label "${eno_name}"
        systemctl restart systemd-networkd
    owner: root:root
    permissions: 0644
    path: /tmp/init-network.sh
  - content: |
        masterIp=$MASTER_ADDRESS
        sgeImage=kandycn/ubuntu-16.04-sge
        container_id=

        while :
        do
          eno_name=$(ip addr | grep eth | sed 's/.*\(eth.*\):.*/\1/' | head -n 1)
          ipAddress=`ifconfig ${eno_name} | sed -n '/addr:/{;s/.*addr://;s/ .*//;p;}'`
          echo ${ipAddress}
          if [ -n "${ipAddress}" ]; then
            echo "Successfully acquired DHCP IP address"
            break
          fi
          sleep 1
        done

        echo "Mount NFS share"
        tdnf -y install nfs-utils inotify-tools
        if [ -e /mnt/sgedefault ]; then
            umount /mnt/sgedefault
            umount /mnt/esxcloud
            systemctl stop nfs-client
            rm -rf /mnt/sgedefault /mnt/esxcloud
        fi

        systemctl restart rpcbind.service
        systemctl start nfs-client
        mkdir -p /mnt/sgedefault
        mkdir -p /mnt/esxcloud
        mount $NFS_IP:/sgedefault /mnt/sgedefault
        mount $NFS_IP:/esxcloud   /mnt/esxcloud

        sleep 1 

        echo "${ipAddress}         $LOCAL_HOSTNAME" >> /etc/hosts
        echo "${ipAddress}         $LOCAL_HOSTNAME" >> /mnt/esxcloud/hosts

        # check whether qmaster has start up
        while [ ! -e /mnt/esxcloud/qmaster ]; do
            sleep 1
        done

        # put qmaster hostname and IP to local host file
        head -n 1 /mnt/esxcloud/qmaster >> /etc/hosts

        touch /etc/esxcloud/slave
        # notify qmaster about the arriving of a new node
        ssh -p 2222 ${masterIp} 'echo 1 >> /etc/esxcloud/qmaster'

        # waiting notification from qmaster
        inotifywait -q -e modify /etc/esxcloud/slave

        echo "starting qmaster container"
        container_id=`docker run -d --net=host -h sge-slave$SGE_ID -v /mnt/sgedefault:/opt/sge/ \
                            -v /etc/esxcloud:/tmp -p $SSH_PORT:$SSH_PORT -p $QMASTER_PORT:$QMASTER_PORT \
                            -p $EXECD_PORT:$EXECD_PORT ${sgeImage}`
        # add master ip and hosts to /etc/hosts
        docker exec $container_id echo `head -n 1` >> /etc/hosts
        # start up sge_execd services
        docker exec $container_id sh /tmp/install_execd.sh        
        echo "done"
    owner: root:root
    permissions: 0644
    path: /tmp/setup-sge-slave.sh
  - content: |
        retry_max="60"
        retry="0"
        while [ "$retry" -lt "$retry_max" ]
        do
          docker version
          if [ "$?" == "0" ]; then
            echo "Docker daemon is up and running!"
            break
          fi
          sleep 1
          retry=`expr $retry + 1`
        done

        if [ "$retry" -eq "$retry_max" ]
        then
          echo "Docker daemon is not up yet!"
        fi
    owner: root:root
    permissions: 0644
    path: /tmp/check-docker.sh

runcmd:
  - systemctl enable docker
  - systemctl start docker
  - sh /tmp/check-docker.sh
  - sh /tmp/init-network.sh
  - sh /tmp/setup-sge-slave.sh > /var/log/sge-slave.log
